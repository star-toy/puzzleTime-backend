plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'
    id "io.sentry.jvm.gradle" version "4.14.1"
}

group = 'StarToy'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

jar {
    // layout.buildDirectory를 사용하여 build 디렉토리의 libs 폴더를 설정
    destinationDirectory = layout.buildDirectory.dir("libs")
    archiveBaseName = 'puzzleTime'
    archiveVersion = '0.0.1-SNAPSHOT'
}

jar {
    // layout.buildDirectory를 사용하여 build 디렉토리의 libs 폴더를 설정
    destinationDirectory = layout.buildDirectory.dir("libs")
    archiveBaseName = 'puzzleTime'
    archiveVersion = '0.0.1-SNAPSHOT'
}

repositories {
	mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // Swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.4'

    // 모델 매핑 관련 의존성
    implementation 'org.modelmapper:modelmapper:3.2.0'

    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    // 스프링 시큐리티 관련 의존성
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.session:spring-session-core'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // 데이터베이스 관련 의존성
    runtimeOnly 'com.mysql:mysql-connector-j'
    implementation "com.h2database:h2"

    //S3
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
    implementation 'javax.validation:validation-api:2.0.1.Final'

    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5' // Jackson JSON 처리기 의존성

    //Sentry
    implementation 'io.sentry:sentry-spring-boot-starter-jakarta:7.14.0'
}

sentry {
    // Generates a JVM (Java, Kotlin, etc.) source bundle and uploads your source code to Sentry.
    // This enables source context, allowing you to see your source
    // code as part of your stack traces in Sentry.
    includeSourceContext = true
    org = "startoy321"
    projectName = "puzzletime_backend"
    authToken = System.getenv("SENTRY_AUTH_TOKEN")
}

test {
    useJUnitPlatform()
}
